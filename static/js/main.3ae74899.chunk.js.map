{"version":3,"sources":["components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","App.styled.jsx","components/ImageGallery/ImageGallery.styled.jsx","service/ApiService.jsx","components/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","App.jsx","index.js"],"names":["Header","styled","header","SearchForm","form","SearchFormBtn","button","SearchLabel","span","SearchInput","input","Searchbar","state","value","handleInputChange","e","setState","currentTarget","toLowerCase","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","this","type","autocomplete","autoFocus","placeholder","onChange","Component","AppContainer","div","ImageGalleryList","ul","fetchImage","searchQuery","page","url","fetch","then","response","ok","json","Promise","reject","Error","ImageGalleryItemValue","li","ImageGallery","img","ImageGalleryItem","src","tag","alt","LoadMoreBtn","Button","handleBtnClick","onClick","children","LoaderContainer","Spinner","color","height","width","timeout","images","status","handleScroll","window","scrollTo","top","document","documentElement","scrollHeight","behavior","prevState","prevProps","prevQuery","newQuery","prevPage","newPage","data","hits","length","onSelect","map","id","webformatURL","tags","largeImageURL","Overlay","ModalContainer","modalRoot","querySelector","Modal","handleKeyDown","code","onClose","handleBackDropClick","target","addEventListener","removeEventListener","createPortal","App","selectedImage","handleFormSubmit","handleSelectedImage","imageUrl","handleModalClose","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3ae74899.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Header = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport {\n  Header,\n  SearchForm,\n  SearchFormBtn,\n  SearchLabel,\n  SearchInput,\n} from './Searchbar.styled';\n\nexport default class Searchbar extends Component {\n  state = {\n    value: '',\n  };\n\n  handleInputChange = e => {\n    this.setState({ value: e.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.value.trim() === '') {\n      return toast.error('Please enter value');\n    }\n    this.props.onSubmit(this.state.value);\n    this.setState({ value: '' });\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <Header>\n        <SearchForm onSubmit={this.handleSubmit}>\n          <SearchFormBtn type=\"submit\">\n            <SearchLabel>Search</SearchLabel>\n          </SearchFormBtn>\n\n          <SearchInput\n            type=\"text\"\n            autocomplete=\"off\"\n            autoFocus\n            value={value}\n            placeholder=\"Search images and photos\"\n            onChange={this.handleInputChange}\n          />\n        </SearchForm>\n      </Header>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nexport const AppContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 16px;\n  padding-bottom: 24px;\n`;\n","import styled from '@emotion/styled';\n\nexport const ImageGalleryList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","const fetchImage = (searchQuery, page) => {\n  const API_KEY = '22738426-58af921ac2532cd8236517c49';\n  const BASE_URL = 'https://pixabay.com/api/';\n  const url = `${BASE_URL}/?key=${API_KEY}&q=${searchQuery}&page=${page}&image_type=photo&orientation=horisontal&per_page=12`;\n\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(new Error('Error'));\n  });\n};\n\nexport default fetchImage;\n","import styled from '@emotion/styled';\n\nexport const ImageGalleryItemValue = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const ImageGallery = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import React, { Component } from 'react';\n\nimport { ImageGallery } from './ImageGalleryItem.styled';\n\nexport default class ImageGalleryItem extends Component {\n  render() {\n    const { src, tag } = this.props;\n    return <ImageGallery src={src} alt={tag} />;\n  }\n}\n","import styled from '@emotion/styled';\n\nexport const LoadMoreBtn = styled.button`\n  margin: 0 auto;\n  width: 150px;\n  height: 40px;\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n`;\n","import React, { Component } from 'react';\nimport { LoadMoreBtn } from './Button.styled';\n\nexport default class Button extends Component {\n  render() {\n    const { handleBtnClick } = this.props;\n    return (\n      <LoadMoreBtn type=\"button\" onClick={handleBtnClick}>\n        {this.props.children}\n      </LoadMoreBtn>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nexport const LoaderContainer = styled.div`\n  margin: 0 auto;\n`;\n","import Loader from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\n\nimport React from 'react';\n\nconst Spinner = () => {\n  return (\n    <LoaderContainer>\n      <Loader\n        type=\"Puff\"\n        color=\"#3F51B5\"\n        height={100}\n        width={100}\n        timeout={3000}\n      />\n    </LoaderContainer>\n  );\n};\n\nexport default Spinner;\n","import React, { Component } from 'react';\nimport { ImageGalleryList } from './ImageGallery.styled';\nimport fetchImage from 'service/ApiService';\nimport { toast } from 'react-toastify';\nimport ImageGalleryItem from 'components/ImageGalleryItem';\nimport { ImageGalleryItemValue } from 'components/ImageGalleryItem/ImageGalleryItem.styled';\nimport Button from 'components/Button/Button';\nimport Spinner from 'components/Loader/Loader';\n\nexport default class ImageGallery extends Component {\n  state = {\n    images: [],\n    status: 'idle',\n    page: 1,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevProps.searchQuery;\n    const newQuery = this.props.searchQuery;\n    const prevPage = prevState.page;\n    const newPage = this.state.page;\n\n    if (prevQuery !== newQuery) {\n      this.setState({ status: 'pending' });\n      fetchImage(newQuery, newPage).then(data => {\n        if (data.hits.length === 0) {\n          toast.error(`No match found.`);\n          this.setState({ status: 'idle' });\n          return;\n        }\n        this.setState({ status: 'resolved', page: 1 });\n        this.setState({\n          images: data.hits,\n        });\n      });\n    }\n\n    if (prevPage !== newPage) {\n      fetchImage(newQuery, newPage)\n        .then(data =>\n          this.setState(prevState => ({\n            images: [...prevState.images, ...data.hits],\n          })),\n        )\n        .then(this.handleScroll);\n    }\n  }\n\n  handleScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  handleBtnClick = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n  };\n\n  render() {\n    const { status, images } = this.state;\n    const { onSelect } = this.props;\n\n    if (status === 'idle') {\n      return <></>;\n    }\n\n    if (status === 'pending') {\n      return <Spinner />;\n    }\n\n    if (status === 'resolved') {\n      return (\n        <>\n          <ImageGalleryList>\n            {images.map(({ id, webformatURL, tags, largeImageURL }) => {\n              return (\n                <ImageGalleryItemValue\n                  key={id}\n                  onClick={() => onSelect(largeImageURL)}\n                >\n                  <ImageGalleryItem src={webformatURL} tag={tags} />\n                </ImageGalleryItemValue>\n              );\n            })}\n          </ImageGalleryList>\n          {images.length >= 12 && (\n            <Button handleBtnClick={this.handleBtnClick}>Load more</Button>\n          )}\n        </>\n      );\n    }\n  }\n}\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalContainer = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Overlay, ModalContainer } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackDropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { src, tag } = this.props;\n    return createPortal(\n      <Overlay onClick={this.handleBackDropClick}>\n        <ModalContainer>\n          <img src={src} alt={tag} />\n        </ModalContainer>\n      </Overlay>,\n      modalRoot,\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Searchbar from 'components/Searchbar';\nimport { AppContainer } from 'App.styled';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ImageGallery from 'components/ImageGallery';\nimport Modal from 'components/Modal';\n\nexport default class App extends Component {\n  state = {\n    searchQuery: '',\n    selectedImage: '',\n  };\n\n  handleFormSubmit = searchQuery => {\n    this.setState({ searchQuery });\n  };\n\n  handleSelectedImage = imageUrl => {\n    this.setState({ selectedImage: imageUrl });\n  };\n\n  handleModalClose = () => {\n    this.setState({ selectedImage: '' });\n  };\n\n  render() {\n    const { searchQuery, selectedImage } = this.state;\n    return (\n      <AppContainer>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageGallery\n          searchQuery={searchQuery}\n          onSelect={this.handleSelectedImage}\n        />\n        {selectedImage && (\n          <Modal src={selectedImage} onClose={this.handleModalClose} />\n        )}\n\n        <ToastContainer autoClose={3000} />\n      </AppContainer>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}